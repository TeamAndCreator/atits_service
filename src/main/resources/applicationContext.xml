<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <context:component-scan base-package="com.atits.dao,com.atits.entity,com.atits.service,com.atits.shiro"/>

    <!-- 导入资源文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--配置 C3P0数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
        <property name="driverClass" value="${driverclass}"/>
        <property name="jdbcUrl" value="${jdbcurl}"/>

        <property name="checkoutTimeout" value="30000"/>
        <property name="idleConnectionTestPeriod" value="30"/>
        <property name="initialPoolSize" value="10"/>
        <property name="maxIdleTime" value="30"/>
        <property name="maxPoolSize" value="100"/>
        <property name="minPoolSize" value="10"/>
        <property name="maxStatements" value="10"/>
        <property name="maxStatementsPerConnection" value="100"/>

    </bean>

    <!-- 配置 Hibernate 的SessionFactory 实例：通过Spring 提供的LocalSessionFactionryBean
        进行配置 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 配置数据源属性 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置 hibernate 配置文件的位置及名称 -->
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <!-- 配置 hibernate 映射文件的位置及名称 ,可以使用通配符. -->
        <property name="packagesToScan" value="com.atits.entity"/>
    </bean>

    <!-- 配置 Spring 的声明式事务 -->
    <!-- 1.配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!-- =========================================================
         Shiro Components
         ========================================================= -->

    <bean id="myRealm" class="com.atits.shiro.MyRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"/>
                <property name="hashIterations" value="1"/>
            </bean>
        </property>
    </bean>
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->

    <!-- 缓存管理器使用 Ehcache 实现-->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
        <property name="cacheManager" ref="cacheManager"/>

    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--<property name="loginUrl" value="/login.jsp"/>-->
        <!--<property name="successUrl" value="/home.jsp"/>-->
        <!--<property name="unauthorizedUrl" value="/unauthorized.jsp"/>-->

        <property name="filterChainDefinitions" value="/**=anon">

        </property>
    </bean>
</beans>



